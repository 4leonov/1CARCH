
#Область СлужебныйПрограммныйИнтерфейс

Процедура ОтправкаСообщений() Экспорт
	
	КОбработке = РегистрыСведений.ОчередьОбмена1СЗУП.СоздатьНаборЗаписей();
	//КОбработке.Отбор.Обработано.Установить(Ложь);
	КОбработке.Прочитать();
	
	Если КОбработке.Количество() > 0 Тогда
		
		Компонента = ИнициализироватьКомпоненту();
        НастройкаПодключения = ПолучитьНастройкуПодключения();
		
		Для Каждого Сообщение из КОбработке Цикл
			
			Заявка = Сообщение.Объект;
			
			ПакетОтправки = Новый Структура();   
			ПакетОтправки.Вставить("Номер", 		Заявка.Номер);
			ПакетОтправки.Вставить("Дата", 			Заявка.Дата);
			ПакетОтправки.Вставить("Табельный", 	Заявка.Сотрудник.Код);
			ПакетОтправки.Вставить("КодПроекта", 	Заявка.Проект.Код);
			ПакетОтправки.Вставить("ДатаНачала", 	Заявка.ДатаНачала);
			ПакетОтправки.Вставить("ДатаОкончания", Заявка.ДатаОкончания);
			ПакетОтправки.Вставить("Цель", 			СокрЛП(Заявка.Цель));
	
			ЗаписьJSON = Новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();
			ЗаписатьJSON(ЗаписьJSON, ПакетОтправки);
			СтрокаСообщения = ЗаписьJSON.Закрыть();

			Попытка
				
				Компонента.Connect(
					НастройкаПодключения.Адрес,
					НастройкаПодключения.Порт,
					НастройкаПодключения.Логин,
					НастройкаПодключения.Пароль,
					НастройкаПодключения.ВиртуальныйХост);
				
				Компонента.BasicPublish(
					НастройкаПодключения.ТочкаОбмена,
					НастройкаПодключения.КлючМаршрутизации,
					СтрокаСообщения,
					1,
					Ложь);
					
			Исключение
				
				ЗаписьЖурналаРегистрации("Синхронизация 1С ЗУП", 
					УровеньЖурналаРегистрации.Ошибка,, 
					Сообщение.Объект.Ссылка, 
					ИнформацияОбОшибке());
		
			КонецПопытки;
			
		КонецЦикла;
		КОбработке.Очистить();  
		КОбработке.Записать();
		
		Компонента = Неопределено;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИнициализироватьКомпоненту()
	
	Макет = ПолучитьОбщийМакет("ВнешняяКомпонентаRabbitMQ");
	Адрес = ПоместитьВоВременноеХранилище(Макет);
	Успех = ПодключитьВнешнююКомпоненту(Адрес, "BITERP", ТипВнешнейКомпоненты.Native);
	
	Если Не Успех Тогда
		ВызватьИсключение "Ошибка подключения внешней компоненты RMQ";
	КонецЕсли;
	
	Компонента = Новый("AddIn.BITERP.PinkRabbitMQ");
	
	Возврат Компонента;
	
КонецФункции

Функция ПолучитьНастройкуПодключения() Экспорт
	
	Настройка1СЗУП = Константы.НастройкаПодключения1СЗУП.Получить();
	
	СтруктураПодключения = Новый Структура();
	СтруктураПодключения.Вставить("Адрес",				Настройка1СЗУП.Адрес);
	СтруктураПодключения.Вставить("ВиртуальныйХост",	Настройка1СЗУП.ВиртуальныйХост);
	СтруктураПодключения.Вставить("КлючМаршрутизации",	Настройка1СЗУП.КлючМаршрутизации);
	СтруктураПодключения.Вставить("ИмяОчереди",			Настройка1СЗУП.ИмяОчереди);
	СтруктураПодключения.Вставить("Логин",				Настройка1СЗУП.Логин);
	СтруктураПодключения.Вставить("Пароль",				Настройка1СЗУП.Пароль); 
	СтруктураПодключения.Вставить("Порт",				Настройка1СЗУП.Порт);
    СтруктураПодключения.Вставить("ТочкаОбмена",		Настройка1СЗУП.ТочкаОбмена);
	
	Возврат СтруктураПодключения;
	
КонецФункции	
	
#КонецОбласти
